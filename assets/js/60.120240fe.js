(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{411:function(t,s,a){"use strict";a.r(s);var n=a(19),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"string과-stringbuffer-stringbuilder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string과-stringbuffer-stringbuilder"}},[t._v("#")]),t._v(" String과 StringBuffer, StringBuilder")]),t._v(" "),a("p",[a("em",[t._v("written by sohyeon, hyemin 💡")])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"_1-string-클래스"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-string-클래스"}},[t._v("#")]),t._v(" 1. String 클래스")]),t._v(" "),a("p",[t._v("자바에서 제공하는 문자열을 위한 클래스이다. 문자열을 저장하고 이를 다루는데 필요한 메서드를 제공한다.")]),t._v(" "),a("p",[t._v("가장 큰 특징은 "),a("code",[t._v("변경 불가능(immutable)")]),t._v("한 속성을 가졌다는 것이다."),a("br"),t._v("\n한번 생성된 String인스턴스가 갖고 있는 문자열은 읽어 올 수만 있고, 변경할 수는 없다.")]),t._v(" "),a("h4",{attrs:{id:"ex-문자열-결합-예시"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-문자열-결합-예시"}},[t._v("#")]),t._v(" ex) 문자열 결합 예시")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("위와 같이 문자열을 결합하는 경우, 인스턴스 내의 문자열이 바뀌는 것이 아니라"),a("br"),t._v('\n새로운 문자열 ("ab")가 담긴 String인스턴스가 생성되는 것이다.'),a("br"),t._v("\n따라서 문자를 결합할 때 연산 마다 새로운 인스턴스가 생성되어 메모리 공간을 차지하게 되므로 가능한 연산횟수를 줄이는 것이 좋다.")]),t._v(" "),a("p",[t._v("이처럼 문자열을 다루는 작업이 많이 필요한 경우 "),a("code",[t._v("StringBuffer클래스")]),t._v("를 사용하는 것이 좋다.")]),t._v(" "),a("h2",{attrs:{id:"_2-stringbuffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-stringbuffer"}},[t._v("#")]),t._v(" 2. StringBuffer")]),t._v(" "),a("p",[a("code",[t._v("String 클래스")]),t._v("는 인스턴스를 생성할 때 지정된 문자열을 변경할 수 없지만 "),a("code",[t._v("StringBuffer 클래스")]),t._v("는 변경이 가능하다."),a("br"),t._v("\n내부적으로 문자열 편집을 위한 버퍼를 가지고 있으며, "),a("code",[t._v("StringBuffer 인스턴스")]),t._v("를 생성할 때 크기를 지정할 수 있다.")]),t._v(" "),a("p",[t._v("인스턴스를 생성할 때, 적절한 길이의 char형 배열이 생성되고,"),a("br"),t._v("\n이 배열은 문자열을 저장하고 편집하기 위한 공간으로 사용된다.")]),t._v(" "),a("h4",{attrs:{id:"ex-stringbuffer-생성자"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-stringbuffer-생성자"}},[t._v("#")]),t._v(" ex)StringBuffer 생성자")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    value "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    shared "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("length")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("str"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("StringBuffer 인스턴스에 저장될 문자열의 길이를 고려하여 충분히 여유있는 크기로 지정하는 것이 좋다."),a("br"),t._v("\n버퍼의 크기를 지정하지 않고 인스턴스를 생성하면 16개의 문자를 저장할 수 있는 크기의 버퍼를 생성한다.")]),t._v(" "),a("p",[t._v("String 클래스와 유사한 메서드를 갖고 있으며 추가적으로 문자 추가, 변경, 삭제와 같이 저장된 내용을 변경할 수 있는 메서드도 갖는다.")]),t._v(" "),a("h2",{attrs:{id:"_3-stringbuilder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-stringbuilder"}},[t._v("#")]),t._v(" 3. StringBuilder")]),t._v(" "),a("p",[a("code",[t._v("StringBuffer")]),t._v("는 멀티쓰레드에 안전하도록 동기화 되어 있고 동기화가 성능을 저하 시킨다."),a("br"),t._v("\n멀티쓰레드로 작성된 프로그램이 아닌 경우, 불필요한 동기화는 성능 저하만 유발하게 된다.")]),t._v(" "),a("p",[t._v("이를 해결하기 위해 "),a("code",[t._v("StringBuffer")]),t._v("에서 쓰레드의 동기화만 뺀 "),a("code",[t._v("StringBuilder")]),t._v("가 고안된 것이다."),a("br"),t._v("\n완전히 똑같은 기능으로 작성되어 있기 떄문에 생성자만 바꾸어 동일하게 사용할 수 있다.")]),t._v(" "),a("h4",{attrs:{id:"ex-사용예시"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-사용예시"}},[t._v("#")]),t._v(" ex) 사용예시")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// StringBuffer")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),t._v(" sb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// StringBuilder")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),t._v(" sb "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nsb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"_4-세가지에-대한-비교"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-세가지에-대한-비교"}},[t._v("#")]),t._v(" 4. 세가지에 대한 비교")]),t._v(" "),a("h3",{attrs:{id:"_4-1-string과-stringbuffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-string과-stringbuffer"}},[t._v("#")]),t._v(" 4-1. String과 StringBuffer")]),t._v(" "),a("p",[a("strong",[a("code",[t._v("String")]),t._v("은 불변성 <-> "),a("code",[t._v("StringBuffer")]),t._v("은 가변성")]),a("br"),t._v(" "),a("strong",[t._v("주요한 포인트는 생성 이후 변할 수 있냐 없냐이다.")])]),t._v(" "),a("p",[a("code",[t._v("String")]),t._v("은 new 연산을 통해 생성되면 인스턴스의 메모리 공간이 절대 변하지 않는다."),a("br"),t._v("\n그래서 + 연산이나 concat을 이용해서 문자열에 변화를 줘도 새로운 메모리 공간을 만들게 된다."),a("br"),t._v("\n이렇게 새로운 문자열이 만들어지면 기존의 문자열은 가비지 콜렉터에 의해 제거되야 하는 단점(언제 제거될지 모름)이 있다."),a("br"),t._v("\n따라서 문자열 연산이 많아질 때 계속해서 객체를 만드는 오버헤드가 발생하므로 성능이 떨어질 수 밖에 없는 단점이 있다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("대신 String 클래스의 객체는 불변하기 때문에 단순하게 읽어가는 조회연산에서는 타 클래스보다 빠르게 읽을 수 있고  \n불변하기 때문에 멀티쓰레드환경에서 동기화를 신경쓸 필요가 없기도 하다.  \n")])])]),a("p",[t._v("결론적으로 String 클래스는 문자열 연산이 적고 조회가 많을 때 멀티쓰레드 환경에서 사용하면 효율적일 수 있겠지만,\n문자열 연산이 많은 경우에는 StringBuffer사용이 더 효율적일 수 있다.")]),t._v(" "),a("h3",{attrs:{id:"_4-2-stringbuffer와-stringbuilder"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-stringbuffer와-stringbuilder"}},[t._v("#")]),t._v(" 4-2. StringBuffer와 StringBuilder")]),t._v(" "),a("p",[a("strong",[t._v("주요한 포인트는 "),a("code",[t._v("동기화 여부")]),t._v("이다.")])]),t._v(" "),a("p",[a("code",[t._v("StringBuffer")]),t._v("는 각 메서드별로 Synchronized Keyword가 존재하여, 멀티스레드 환경에서도 동기화를 지원하지만"),a("br"),t._v(" "),a("code",[t._v("StringBuilder")]),t._v("는 동기화를 보장하지 않는다.")]),t._v(" "),a("p",[t._v("따라서 멀티스레드 환경이라면 값 동기화 보장을 위해 "),a("code",[t._v("StringBuffer")]),t._v("를 사용하고,"),a("br"),t._v("\n단일스레드 환경이라면 "),a("code",[t._v("StringBuilder")]),t._v("를 사용하는 것이 좋다.")]),t._v(" "),a("p",[t._v("단일 스레드환경에서 StringBuffer를 사용한다고 문제가 되는 것은 아니지만, 동기화 관련 처리로 인해 StringBuilder에 비해 성능이 좋지 않다.")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"reference-additional-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-additional-resources"}},[t._v("#")]),t._v(" Reference & Additional Resources")]),t._v(" "),a("ul",[a("li",[t._v("Java의 정석 - 도우출판")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://12bme.tistory.com/42",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://12bme.tistory.com/42"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://jeong-pro.tistory.com/85",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://jeong-pro.tistory.com/85"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);