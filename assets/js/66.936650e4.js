(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{419:function(_,v,e){"use strict";e.r(v);var t=e(19),o=Object(t.a)({},(function(){var _=this,v=_.$createElement,e=_._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"네트워크-전송-get-post방식"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#네트워크-전송-get-post방식"}},[_._v("#")]),_._v(" 네트워크 전송 GET, POST방식")]),_._v(" "),e("p",[e("em",[_._v("written by sohyeon, hyemin 💡")])]),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"_1-http-프로토콜-hypertext-transfer-protocol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-프로토콜-hypertext-transfer-protocol"}},[_._v("#")]),_._v(" 1. HTTP 프로토콜 (HyperText Transfer Protocol)")]),_._v(" "),e("p",[_._v("인터넷 상에서 클라이언트와 서버 간에 요청/응답으로 데이터를 주고 받기 위한 프로토콜이다.")]),_._v(" "),e("p",[e("code",[_._v("클라이언트(웹 브라우저)")]),_._v("가 "),e("code",[_._v("서버(웹 서버)")]),_._v("로 특정 "),e("code",[_._v("웹 페이지")]),_._v("를 요청하면 웹 서버가 해당 페이지의 내용을 "),e("code",[_._v("HTML")]),_._v("형식으로 응답한다.")]),_._v(" "),e("p",[_._v("이 때, HTTP 요청에 포함되는 HTTP 메소드는 요청의 종류를 서버에게 알려주기 위해 사용한다.  HTTP 메소드는 GET, POST, PUT, DELETE, HEAD, OPTIONS, TRACE 등이 있다.")]),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"_2-get"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-get"}},[_._v("#")]),_._v(" 2. GET")]),_._v(" "),e("p",[_._v("GET은 HTTP/1.1 스펙인 RFC2616의 Section9.3에 따르면 "),e("code",[_._v("서버로부터 정보를 조회하기 위해 설계된 메소드")]),_._v("다.")]),_._v(" "),e("h3",{attrs:{id:"get의-특징"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get의-특징"}},[_._v("#")]),_._v(" GET의 특징")]),_._v(" "),e("ul",[e("li",[e("p",[_._v("GET은 "),e("code",[_._v("요청을 전송할 때 필요한 데이터를 Body에 담지 않고")]),_._v(", "),e("code",[_._v("쿼리스트링")]),_._v("을 통해 전송한다.")]),_._v(" "),e("ul",[e("li",[_._v("쿼리스트링은 URL의 끝에 "),e("code",[_._v("?")]),_._v("와 함께 이름과 값으로 쌍을 이루는 요청 파라미터를 말하는데, 요청 파라미터가 여러 개이면 "),e("code",[_._v("&")]),_._v("로 연결한다.")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("www.example-url.com/resources?name1=val1&name2=val2")])]),_._v(" "),e("ul",[e("li",[_._v("쿼리스트링을 포함한 URL로, 요청 파라미터명은 name1, name2이고, 각각의 파라미터는 val1, val2라는 값으로 서버에 요청을 보낸다.")]),_._v(" "),e("li",[_._v("또한, 위와 같이 GET을 사용하는 경우 "),e("code",[_._v("데이터가 노출되어 보안에 취약")]),_._v("할 수 있으며, "),e("code",[_._v("URL의 길이가 정해져 있어")]),_._v(" 많은 양의 정보를 전달할 수 없다.")])])]),_._v(" "),e("li",[e("p",[_._v("GET은 "),e("code",[_._v("불필요한 요청을 제한하기 위해 요청이 캐시")]),_._v("될 수 있다.")]),_._v(" "),e("ul",[e("li",[_._v("js, css, 이미지와 같은 정적 컨텐츠는 데이터양이 크고, 변경될 일이 적어서 반복해서 동일한 요청을 보낼 필요가 없다.")]),_._v(" "),e("li",[_._v("따라서, 정적 컨텐츠를 요청하고 나면 브라우저에서는 요청을 캐시해두고, 동일한 요청이 발생할 때 서버로 요청을 보내지 않고 캐시된 데이터를 사용한다.")]),_._v(" "),e("li",[_._v("만약 정적 컨텐츠를 변경했을 때, 내용이 바뀌지 않는 경우에는 브라우저의 캐시를 지워줌으로써 이를 해결한다.")])])])]),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"_3-post"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-post"}},[_._v("#")]),_._v(" 3. POST")]),_._v(" "),e("p",[_._v("POST는 GET과 달리 리소스를 생성/변경하기 위해 설계되었기 때문에 "),e("code",[_._v("전송해야 될 데이터를 HTTP 메세지의 Body에 담아서 전송")]),_._v("한다.")]),_._v(" "),e("h3",{attrs:{id:"post의-특징"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#post의-특징"}},[_._v("#")]),_._v(" POST의 특징")]),_._v(" "),e("ul",[e("li",[e("p",[_._v("POST는 전송해야 할 데이터를 HTTP 메세지의 Body에 담아서 전송한다.")]),_._v(" "),e("ul",[e("li",[_._v("데이터가 Body로 전송되고 내용이 눈에 보이지 않아 GET보다 보안적인 면에서 안전하다고 생각할 수 있지만, "),e("code",[_._v("POST 요청도 크롬 개발자 도구, Fiddler와 같은 툴로 요청 내용을 확인할 수 있다.")])]),_._v(" "),e("li",[_._v("따라서, 민감한 데이터의 경우에는 "),e("code",[_._v("암호화하여 전송")]),_._v("해야 한다.")])])]),_._v(" "),e("li",[e("p",[_._v("POST는 "),e("code",[_._v("URL에 데이터를 노출하지 않으므로 즐겨찾기나 캐싱이 불가능")]),_._v("하다.")])]),_._v(" "),e("li",[e("p",[_._v("HTTP 메세지의 "),e("code",[_._v("Body는 길이의 제한없이")]),_._v(" 대용량 데이터를 전송할 수 있다.")])]),_._v(" "),e("li",[e("p",[_._v("POST로 요청을 보낼 때는 "),e("code",[_._v("요청 헤더의 Content-Type에 요청 데이터의 타입을 표시")]),_._v("해야 한다.")]),_._v(" "),e("ul",[e("li",[_._v("데이터 타입을 표시하지 않으면 서버는 내용이나 URL에 포함된 리소스의 확장자명 등으로 데이터 타입을 유추한다.")]),_._v(" "),e("li",[_._v("알 수 없는 경우에는 application/octet-stream로 요청을 처리한다.")])])])]),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"_4-get과-post의-차이"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-get과-post의-차이"}},[_._v("#")]),_._v(" 4. GET과 POST의 차이")]),_._v(" "),e("ul",[e("li",[e("p",[e("code",[_._v("GET")]),_._v("은 Idempotent(멱등)하도록 설계되었는데 이는 "),e("code",[_._v("서버에게 동일한 요청을 여러 번 전송하더라도 동일한 응답이 돌아와야 한다는 것")]),_._v("을 의미한다.")]),_._v(" "),e("ul",[e("li",[_._v("설계원칙에 따라 서버의 데이터나 상태를 변경시키지 않아야 동일한 응답이 돌아오기 때문에 주로 "),e("code",[_._v("조회를 할 때 사용")]),_._v("한다.")]),_._v(" "),e("li",[_._v("예를 들어, 브라우저에서 웹페이지를 열어보거나 게시글을 읽는 등 조회를 하는 행위는 GET으로 요청한다.")])])]),_._v(" "),e("li",[e("p",[e("code",[_._v("POST")]),_._v("는 Non-idempotent하기 때문에 "),e("code",[_._v("서버에게 동일한 요청을 여러 번 전송해도 응답은 항상 다를 수 있다.")])]),_._v(" "),e("ul",[e("li",[_._v("서버의 상태나 데이터를 변경시킬 때 사용한다.")]),_._v(" "),e("li",[_._v("예를 들어, 게시글을 쓰면 서버에 게시글이 저장이 되고, 게시글을 삭제하면 해당 데이터가 없어지는 등 POST로 요청을 하게 되면 서버의 무언가는 변경되도록 사용한다.")]),_._v(" "),e("li",[_._v("생성, 수정, 삭제에 사용할 수 있지만, "),e("code",[_._v("생성에는 POST, 수정은 PUT 또는 PATCH, 삭제는 DELETE가 더 용도에 맞는 메소드")]),_._v("라고 할 수 있다.")])])]),_._v(" "),e("li",[e("p",[_._v("웹페이지를 조회할 때, 링크를 통해 특정 페이지로 이동하려면 해당 링크와 관련된 정보가 필요한데")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("POST")]),_._v("는 "),e("code",[_._v("요청 데이터가 Body에 담겨 있기 때문에")]),_._v(" 링크 정보를 가져올 수 없지만,")]),_._v(" "),e("li",[e("code",[_._v("GET")]),_._v("은 "),e("code",[_._v("URL에 요청 파라미터를 가지고 있기 때문에")]),_._v(" 링크를 걸 때, URL에 파라미터를 사용해 더 자세하게 페이지를 링크할 수 있다.")])])])]),_._v(" "),e("p",[e("code",[_._v("💡 이처럼 GET과 POST는 차이가 있기 때문에 설계원칙에 따라 적절한 용도로 사용할 것!")])]),_._v(" "),e("br"),_._v(" "),e("h2",{attrs:{id:"reference-additional-resources"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reference-additional-resources"}},[_._v("#")]),_._v(" Reference & Additional Resources")]),_._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://hongsii.github.io/2017/08/02/what-is-the-difference-get-and-post/",target:"_blank",rel:"noopener noreferrer"}},[_._v("GET과 POST의 차이"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);v.default=o.exports}}]);