(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{410:function(t,s,a){"use strict";a.r(s);var n=a(19),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"오버로딩과-오버라이딩-overloading-and-overriding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#오버로딩과-오버라이딩-overloading-and-overriding"}},[t._v("#")]),t._v(" 오버로딩과 오버라이딩 (Overloading and Overriding)")]),t._v(" "),a("p",[a("em",[t._v("written by sohyeon, hyemin 💡")])]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"오버로딩-overloading"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#오버로딩-overloading"}},[t._v("#")]),t._v(" 오버로딩(Overloading)")]),t._v(" "),a("p",[a("strong",[t._v("한 클래스 내에 같은 이름의 메서드를 여러개 정의하는 것")])]),t._v(" "),a("p",[t._v("한 클래스 내에 이미 사용하려는 이름과 같은 이름을 가진 메서드가 있더라도"),a("br"),t._v(" "),a("strong",[t._v("매개변수의 개수 또는 타입이 다르면,")]),t._v(" 같은 이름을 사용해서 메서드를 정의할 수 있음")]),t._v(" "),a("p",[a("code",[t._v("오버로딩된 메서드들은 매개변수에 의해서만 구별될 수 있으므로")]),a("br"),t._v(" "),a("code",[t._v("반환 타입은 오버로딩을 구현하는데 아무런 영향을 주지 않음")])]),t._v(" "),a("h4",{attrs:{id:"오버로딩의-조건"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#오버로딩의-조건"}},[t._v("#")]),t._v(" 오버로딩의 조건")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("1. 메서드 이름이 같아야 한다.\n2. 매개변수의 개수 또는 타입이 달라야 한다.\n")])])]),a("h4",{attrs:{id:"ex-예제"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-예제"}},[t._v("#")]),t._v(" ex) 예제")]),t._v(" "),a("div",{staticClass:"language-Java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Overloadingtest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test() 호출")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"매개변수 없음"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test에 매개변수로 int형 2개 호출")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"매개변수 "')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"와 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test에 매개변수 double형 1개 호출")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"매개변수 "')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" test "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Overloadingtest 객체 생성")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Overloadingtest")]),t._v(" ob "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Overloadingtest")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test() 호출")]),t._v("\n        ob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test(int a, int b) 호출")]),t._v("\n        ob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test(double d) 호출")]),t._v("\n        ob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// test(double d) 호출")]),t._v("\n        ob"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123.4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("메서드의 이름은 같지만 매개변수에 따라 각기 다른 결과를 출력하게 됩니다.")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"오버라이딩-overriding"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#오버라이딩-overriding"}},[t._v("#")]),t._v(" 오버라이딩(Overriding)")]),t._v(" "),a("p",[a("strong",[t._v("조상 클래스로부터 상속받은 메서드의 내용을 변경하는 것")])]),t._v(" "),a("p",[t._v("상속받은 메서드를 그대로 사용하기도 하지만 자손 클래스 자신에 맞게 변경해야하는 경우에 오버라이딩한다.")]),t._v(" "),a("h4",{attrs:{id:"오버라이딩-조건"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#오버라이딩-조건"}},[t._v("#")]),t._v(" 오버라이딩 조건")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("자손 클래스에서 오버라이딩하는 메서드는 조상 클래스의 메서드와\n1. 이름이 같아야 한다.\n2. 매개변수가 같아야 한다.\n3. 반환타입이 같아야 한다.\n\n단, 조상 클래스의 메서드를 자손 클래스에서 오버라이딩할 때\n1. 접근 제어자는 조상 클래스의 메서드보다 좁은 범위로 변경 할 수 없다.\n2. 조상 클래스의 메서드보다 많은 수의 예외를 선언할 수 없다.\n3. 인스턴스 메서드를 static메서드로 또는 그 반대로 변경할 수 없다.\n")])])]),a("h4",{attrs:{id:"ex-예제-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ex-예제-2"}},[t._v("#")]),t._v(" ex) 예제")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class Point {\n    int x;\n    int y;\n    \n    String getLocation() {\n        return "x : " + x + ", y : " + y;\n    }\n}\n\nclass Point3D extends Point {\n    int z;\n\n    String getLocation() {\n        return "x : " + x + ", y : " + y + ", z : " + z;\n    }\n}\n')])])]),a("br"),t._v(" "),a("h2",{attrs:{id:"오버로딩-vs-오버라이딩"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#오버로딩-vs-오버라이딩"}},[t._v("#")]),t._v(" 오버로딩 vs 오버라이딩")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("오버로딩(overloading) : 기존에 없는 새로운 메서드를 정의하는 것(new)\n오버라이딩(overriding) : 상속받은 메서드의 내용을 변경하는 것(change, modify)\n")])])]),a("br"),t._v(" "),a("h2",{attrs:{id:"question"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#question"}},[t._v("#")]),t._v(" Question")]),t._v(" "),a("br"),t._v(" "),a("h2",{attrs:{id:"reference-additional-resources"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reference-additional-resources"}},[t._v("#")]),t._v(" Reference & Additional Resources")])])}),[],!1,null,null,null);s.default=e.exports}}]);